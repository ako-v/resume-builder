"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpStatusMessage = void 0;
var HttpStatusMessage;
(function (HttpStatusMessage) {
    HttpStatusMessage["CONTINUE"] = "Continue";
    HttpStatusMessage["SWITCHING_PROTOCOLS"] = "Switching Protocols";
    HttpStatusMessage["PROCESSING"] = "Processing";
    HttpStatusMessage["OK"] = "OK";
    HttpStatusMessage["CREATED"] = "Created";
    HttpStatusMessage["ACCEPTED"] = "Accepted";
    HttpStatusMessage["NO_CONTENT"] = "No Content";
    HttpStatusMessage["RESET_CONTENT"] = "Reset Content";
    HttpStatusMessage["PARTIAL_CONTENT"] = "Partial Content";
    HttpStatusMessage["MULTI_STATUS"] = "Multi-Status";
    HttpStatusMessage["ALREADY_REPORTED"] = "Already Reported";
    HttpStatusMessage["IM_USED"] = "IM Used";
    HttpStatusMessage["MULTIPLE_CHOICES"] = "Multiple Choices";
    HttpStatusMessage["MOVED_PERMANENTLY"] = "Moved Permanently";
    HttpStatusMessage["FOUND"] = "Found";
    HttpStatusMessage["SEE_OTHER"] = "See Other";
    HttpStatusMessage["NOT_MODIFIED"] = "Not Modified";
    HttpStatusMessage["USE_PROXY"] = "Use Proxy";
    HttpStatusMessage["TEMPORARY_REDIRECT"] = "Temporary Redirect";
    HttpStatusMessage["PERMANENT_REDIRECT"] = "Permanent Redirect";
    HttpStatusMessage["BAD_REQUEST"] = "Bad Request";
    HttpStatusMessage["UNAUTHORIZED"] = "Unauthorized";
    HttpStatusMessage["PAYMENT_REQUIRED"] = "Payment Required";
    HttpStatusMessage["FORBIDDEN"] = "Forbidden";
    HttpStatusMessage["NOT_FOUND"] = "Not Found";
    HttpStatusMessage["METHOD_NOT_ALLOWED"] = "Method Not Allowed";
    HttpStatusMessage["NOT_ACCEPTABLE"] = "Not Acceptable";
    HttpStatusMessage["PROXY_AUTHENTICATION_REQUIRED"] = "Proxy Authentication Required";
    HttpStatusMessage["REQUEST_TIMEOUT"] = "Request Timeout";
    HttpStatusMessage["CONFLICT"] = "Conflict";
    HttpStatusMessage["GONE"] = "Gone";
    HttpStatusMessage["LENGTH_REQUIRED"] = "Length Required";
    HttpStatusMessage["PRECONDITION_FAILED"] = "Precondition Failed";
    HttpStatusMessage["PAYLOAD_TOO_LARGE"] = "Payload Too Large";
    HttpStatusMessage["URI_TOO_LONG"] = "URI Too Long";
    HttpStatusMessage["UNSUPPORTED_MEDIA_TYPE"] = "Unsupported Media Type";
    HttpStatusMessage["RANGE_NOT_SATISFIABLE"] = "Range Not Satisfiable";
    HttpStatusMessage["EXPECTATION_FAILED"] = "Expectation Failed";
    HttpStatusMessage["I_AM_A_TEAPOT"] = "I'm a teapot";
    HttpStatusMessage["MISDIRECTED_REQUEST"] = "Misdirected Request";
    HttpStatusMessage["UNPROCESSABLE_ENTITY"] = "Unprocessable Entity";
    HttpStatusMessage["LOCKED"] = "Locked";
    HttpStatusMessage["FAILED_DEPENDENCY"] = "Failed Dependency";
    HttpStatusMessage["TOO_EARLY"] = "Too Early";
    HttpStatusMessage["UPGRADE_REQUIRED"] = "Upgrade Required";
    HttpStatusMessage["PRECONDITION_REQUIRED"] = "Precondition Required";
    HttpStatusMessage["TOO_MANY_REQUESTS"] = "Too Many Requests";
    HttpStatusMessage["REQUEST_HEADER_FIELDS_TOO_LARGE"] = "Request Header Fields Too Large";
    HttpStatusMessage["UNAVAILABLE_FOR_LEGAL_REASONS"] = "Unavailable For Legal Reasons";
    HttpStatusMessage["INTERNAL_SERVER_ERROR"] = "Internal Server Error";
    HttpStatusMessage["NOT_IMPLEMENTED"] = "Not Implemented";
    HttpStatusMessage["BAD_GATEWAY"] = "Bad Gateway";
    HttpStatusMessage["SERVICE_UNAVAILABLE"] = "Service Unavailable";
    HttpStatusMessage["GATEWAY_TIMEOUT"] = "Gateway Timeout";
    HttpStatusMessage["HTTP_VERSION_NOT_SUPPORTED"] = "HTTP Version Not Supported";
    HttpStatusMessage["VARIANT_ALSO_NEGOTIATES"] = "Variant Also Negotiates";
    HttpStatusMessage["INSUFFICIENT_STORAGE"] = "Insufficient Storage";
    HttpStatusMessage["LOOP_DETECTED"] = "Loop Detected";
    HttpStatusMessage["NOT_EXTENDED"] = "Not Extended";
    HttpStatusMessage["NETWORK_AUTHENTICATION_REQUIRED"] = "Network Authentication Required";
})(HttpStatusMessage || (exports.HttpStatusMessage = HttpStatusMessage = {}));
//# sourceMappingURL=http-status-message.enum.js.map